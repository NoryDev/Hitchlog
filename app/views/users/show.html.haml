- title "#{h(user)}"

#users_show.columns
  .left_column
    %h1.text_center
      = user
      - if user == current_user
        (#{link_to t('.edit'), edit_user_path(user)})

    .profile_section.text_center
      = country_images_for_user(user)

    - if user_signed_in? and current_user == user
      .profile_section
        - if user.trips.empty?
          %p= link_to t('.log_your_first_trip'), new_trip_path
        - else
          %p= link_to t('.log_new_trip'), new_trip_path

    - if !user.about_you.blank?
      .profile_section
        %h3 #{t('.about')} #{user}:
        .about
          %p= RDiscount.new(h(user.about_you)).to_html.html_safe

    .profile_section.trips_and_rides
      - if user.trips.size > 0
        .float_left.column
          %h3 #{ t('.trip', count: user.trips.size) }:
          - unless user.trips.alone.size == 0
            %p
              #{user.trips.alone.size}x #{t('.alone')}
              = link_to hitchhiking_with_image(0), user_path(user.username, hitchhiked_with: 0)
          - unless user.trips.in_pairs.size == 2
            %p 
              #{user.trips.in_pairs.size}x #{t('.with_two')}
              = link_to hitchhiking_with_image(1), user_path(user.username, hitchhiked_with: 1)
          - unless user.trips.with_three.size == 3
            %p 
              #{user.trips.with_three.size}x #{t('.with_three')}
              = link_to hitchhiking_with_image(2), user_path(user.username, hitchhiked_with: 2)
          - unless user.trips.with_four == 0
            %p
              #{user.trips.with_four.size}x #{t('.with_four')}
            = link_to hitchhiking_with_image(3), user_path(user.username, hitchhiked_with: 3)

        .float_left.column
          %h3 #{user.rides.size} #{t('.rides', count: user.rides.size )}:
          - user.experiences_in_percentage.each do |experience, val|
            %p.experience{:class => "#{experience}"}
              #{(val*100).to_i}%
              = experience_image experience 

      - unless user.genders.empty?
        .float_left.column
          %h3 #{t('.gender_of_drivers')}:
          - user.genders_in_percentage.each do |gender, val|
            %p.gender{:class => "#{gender}"}
              #{(val*100).to_i}%
              = gender_people_image gender 

    = will_paginate trips, :class => 'digg_pagination'

    = render 'trips/search_interface'
    #trips
      = render 'trips/list', :trips => user.trips
    = will_paginate trips, :class => 'digg_pagination'

  .right_column
    = render 'users/right_column', user: user

