%article.entry-post
  %header.entry-header
    %h1
      = country_images_for_trip(trip)
      = trip.to_s
      - if trip.user == current_user && controller.action_name != 'edit'
        = link_to t('general.edit'), edit_trip_path(trip), class: 'btn btn-info btn-large'
    .byline
      %i.icon-pencil
      = link_to_user(trip.user)
      &nbsp;&nbsp;
      %span.tip{title: t('.trip_duration', time: accurate_distance_of_time_in_words(trip.duration))}
        %i.icon-time
        = trip.departure.strftime("%B %d, %Y")
        = '-'
        = accurate_distance_of_time_in_words(trip.arrival - trip.departure)
        &nbsp;&nbsp;
      %span.tip{title: t('.google_maps_duration', time: accurate_distance_of_time_in_words( trip.gmaps_duration))} 
        %b G 
        = accurate_distance_of_time_in_words(trip.gmaps_duration)
      &nbsp;&nbsp;
      %span.tip{title: pluralize(trip.rides.with_photo.size, t('general.photo'))}
        = trip.rides.with_photo.size
        %i.icon-picture
      &nbsp;&nbsp;
      %a.scrollto.tip{href: "#view-comments", title: pluralize(trip.comments.size, t('general.comment'))}
        %i.icon-comments-alt
        = trip.comments.size
      &nbsp;&nbsp;
      %span.no-wrap.tip{title: pluralize(trip.rides.size, t('general.ride'))}
        %i.icon-thumbs-up
        = trip.rides.size

  .entry-content
    = render 'image_slider', trip: trip

    - trip.rides.select {|ride| not ride.story.blank?}.each do |ride|
      %h3
        = ride.title if ride.title
        %span.subtitle
          (#{t('.ride')} #{ride.number})
          = experience_image(ride.experience)
          = gender_people_image(ride.gender)
          = waiting_time_image(human_minutes(ride.waiting_time))
          = driving_time_image(human_hours(ride.duration))

      - if !ride.story.blank?
        = ride.markdown_story

      %hr/

  / end entry-content
  %footer.entry-footer
    %span.blog.date
      %span.month= trip.departure.strftime("%b")
      %span.day= trip.departure.strftime("%d")
      %span.year= trip.departure.strftime("%Y")


- if false
  = t('hitchslider.user_hitchhiked_text', user: trip.user.to_s,
                                          time: (trip.departure ? time_ago_in_words(trip.departure) : nil),
                                          distance: distance(trip.distance),
                                          from: trip.from,
                                          to: trip.to,
                                          rides_size: trip.rides.size).html_safe
  %br/
  - if trip.duration && trip.duration != 0
    = t('hitchslider.it_took_text', time: human_seconds(trip.duration)).html_safe
  - if trip.gmaps_duration && trip.gmaps_duration != 0
    = t('hitchslider.google_maps_text', gmaps_duration: human_seconds(trip.gmaps_duration),
                             user: trip.user.to_s,
                             gmaps_difference: gmaps_difference(trip)).html_safe


%section#view-comments.entry-comments.clearfix
  %h3
    = pluralize(trip.comments.size, t('general.comment'))
  %ul
    - trip.comments.each do |comment|
      %li
        %footer.comment-meta.comment-picture
          = link_to user_path(comment.user) do
            = render 'users/profile_image', user: comment.user, type: 'square'

          .comment-meta
            %span.comment-author.vcard
              %cite
                = link_to comment.user, user_path(comment.user)
            %time.published= trip.departure.strftime("%B %d, %Y")

        .text
          = RDiscount.new(comment.body).to_html.html_safe
          #comment-form

  - if user_signed_in?
    %h3 Leave a Comment
    = form_tag create_comment_trip_path(trip) do
      %span.inputwrapper
        = label_tag :body, t('.message')
        = text_area_tag :body, '', class: 'comment_body', rows: 5, cols: 30
      %br/
      %input.btn.btn-primary{:name => "submit", :type => "submit", :value => "Add Comment"}/
  - else
    %p
      = link_to t('.log_in'), new_user_session_path
      = t('general.or')
      = link_to t('.register'), new_user_registration_path
      = t('.to_comment')


